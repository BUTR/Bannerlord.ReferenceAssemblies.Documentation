name: DocFX

on:
  push:
    branches: [ dev ]
    paths:
      - '.github/workflows/docfx.yml'
  repository_dispatch:
    types: [game_version_update, game_version_update_patch]
  workflow_dispatch:

env:
  # Disable the .NET logo in the console output.
  DOTNET_NOLOGO: true
  # Disable the .NET first time experience to skip caching NuGet packages and speed up the build.
  DOTNET_SKIP_FIRST_TIME_EXPERIENCE: true
  # Disable sending .NET CLI telemetry to Microsoft.
  DOTNET_CLI_TELEMETRY_OPTOUT: true

jobs:
  docfx:
    name: DocFX documentation
    runs-on: ubuntu-latest
    steps:
    - name: DocFX Setup
      uses: butr/actions-docfx-setup@v3.0
      with:
        github-token: ${{secrets.GITHUB_TOKEN}}

    - name: Download latest ref packages
      run: >-
          $game_version=$env:GAME_VERSION;
          $game_version=$game_version.substring(1);
          dotnet run -p build/PackageDownloader -- -v $game_version -t $PWD -f https://api.nuget.org/v3/index.json;
      shell: pwsh
      env:
        GAME_VERSION: ${{secrets.SYNCED_GAME_STABLE_VERSION}}

    - name: Run DocFX
      run: >-
        if ($${{runner.os == 'Windows'}}) {
          docfx.console/tools/docfx.exe metadata docs/docfx-meta.json;
          docfx.console/tools/docfx.exe build docs/docfx-build.json;
        }
        else {
          mono docfx.console/tools/docfx.exe metadata docs/docfx-meta.json;
          mono docfx.console/tools/docfx.exe build docs/docfx-build.json;
        }
      shell: pwsh

    - name: Deploy DocFX
      uses: crazy-max/ghaction-github-pages@v3
      with:
        target_branch: gh-pages
        build_dir: docs/_site
      env:
        GITHUB_TOKEN: ${{secrets.GITHUB_TOKEN}}
